# -*- mode: ruby -*-
#
# Vagrantfile - One development machine to rule them all.
#
# Meant for RHEL rebuilds (e.g. Rocky Linux, AlmaLinux) or CentOS Stream.
#


require 'json'


os_variant = "Rocky"
os_release = "9"

# This is the minimum customization necessary but, to tailor this configuration
# to a specific project, you should also edit the "vagrant/provision.sh" script...
vm_name = "Generic RHEL #{os_release}.x (#{os_variant})"
vm_hostname = "vagrant-#{os_variant.downcase}-#{os_release}x"
vm_size = {"cpus" => 1, "memory" => 1024}

os_boxes = {
    "centos" => "carlosefr/centos-stream-#{os_release}",
    "rocky" => "carlosefr/rockylinux-#{os_release}",  # ...the official box is 3x the size.
    "alma" => "almalinux/#{os_release}",
}

vm_box = os_boxes[os_variant.downcase]
vm_box_version = nil

# Location of the external files used by this script...
vagrant_assets = File.dirname(__FILE__) + "/vagrant"


# Someone may need to (locally) override the VM size for some specific task...
vm_size_override = File.dirname(__FILE__) + "/.vagrant_size.json"
if File.exists?(vm_size_override)
    vm_size = JSON.parse(File.read(vm_size_override))
end


Vagrant.configure(2) do |config|
    builtin_guest_additions = vm_box.match(/^(?:carlosefr|bento|almalinux|rockylinux)/)

    if !builtin_guest_additions
        config.vagrant.plugins = ["vagrant-vbguest"]
    end

    config.vm.box = vm_box
    config.vm.box_version = vm_box_version.nil? ? vm_box_version : ">= 0"
    config.vm.hostname = vm_hostname

    # The CentOS box defaults to using rsynced folders...
    config.vm.synced_folder ".", "/vagrant", disabled: true

    # Support git operations inside the VM. The file provisioner requires files to exist,
    # which in this case is a good thing as it prevents commits attributed to wrong users...
    config.vm.provision "file", source: "~/.gitconfig", destination: "~/.gitconfig"

    # Make the local user's SSH key reachable by the main provisioning script...
    config.vm.provision "file", source: "~/.ssh/id_rsa.pub", destination: "/tmp/id_rsa.pub"

    # Perform base-system customizations and install project-specific dependencies...
    config.vm.provision "shell", path: "#{vagrant_assets}/provision.sh",
                                 env: {"HOST_TIMEZONE" => Time.now.zone},
                                 privileged: false  # ...run as the "vagrant" user.

    config.vm.post_up_message = "VM available from the host at: #{vm_hostname}.local"

    config.ssh.forward_agent = true
    config.ssh.keep_alive = true

    config.vm.provider "virtualbox" do |vm, override|
        vm.name = vm_name
        vm.gui = false

        vm.memory = vm_size["memory"]
        vm.cpus = vm_size["cpus"]
        vm.default_nic_type = "virtio"

        #
        # Resolve names using the host's configured DNS resolvers, but hide their actual IP
        # addresses from the guest (useful if they come from DHCP and are subject to change).
        #
        # It is sometimes useful to use "--natdnshostresolver1" instead, to use the host's
        # stub resolver APIs (i.e. when using VPN software that hijacks DNS resolution), but
        # beware that this comes with some caveats (e.g. musl doesn't deal with it very well).
        #
        vm.customize ["modifyvm", :id, "--natdnsproxy1", "on"]

        # No need for audio in a server-type VM...
        vm.customize ["modifyvm", :id, "--audio", "none"]

        # Install guest additions automatically (if not already builtin)...
        if Vagrant.has_plugin?("vagrant-vbguest")
            override.vbguest.auto_update = !builtin_guest_additions
            override.vbguest.allow_downgrade = false
        end

        # Expose the VM to the host instead of forwarding many ports individually
        # for complex projects. The provisioning script will setup Avahi/mDNS to
        # make the guest VM easily accessible through a "*.local" domain...
        override.vm.network "private_network", type: "dhcp", name: "vboxnet0"

        # Even though we set the default NIC type above, it doesn't seem to always apply...
        vm.customize ["modifyvm", :id, "--nictype1", "virtio"]
        vm.customize ["modifyvm", :id, "--nictype2", "virtio"]

        # Make the current directory visible (and editable) inside the VM...
        override.vm.synced_folder ".", "/home/vagrant/shared"
    end
end


# vim: set expandtab ts=4 sw=4 ft=ruby:
